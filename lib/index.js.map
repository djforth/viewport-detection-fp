{"version":3,"sources":["../src/index.js"],"names":["window","navigator","maxTouchPoints","mobile","min","max","tablet","desktop","innerWidth","addCallback","prototype","toString","call","concat","getDevice","getWidth","track","forEach","touchAvailabile"],"mappings":"4gBAKM,EAAgB,UAAI,CACxB,MAAO,gBAAkBA,OAAlB,EACAC,UAAUC,cAClB,C,WAEc,WAAe,CAC5B,EAAc,GAAe,CAC3BC,OAAQ,CAACC,IAAK,CAAN,CAASC,IAAK,GAAd,CADmB,CAEzBC,OAAQ,CAACF,IAAK,GAAN,CAAWC,IAAK,GAAhB,CAFiB,CAGzBE,QAAS,CAACH,IAAK,GAAN,CAAWC,IAAK,IAAhB,CAHgB,CADD,CAO5B,GAAI,GAAS,gBAAb,CACI,EAAcL,OAAOQ,UADzB,CAEI,IAFJ,CAGI,EAAQ,GAHZ,CAIM,EAAc,oBAJpB,CAUM,EAAM,CACVC,WADU,wBACK,CAMb,MAL2C,mBAAvC,UAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,GAKJ,GAJE,EAAK,GAIP,EAFA,EAAY,EAAUC,MAAV,GAEZ,EACD,CARS,CASRC,SATQ,qBASG,CACX,MAAO,IACR,CAXS,CAYRC,QAZQ,oBAYE,CACV,QACD,CAdS,CAeRC,KAfQ,iBAeD,CACP,cAAY,UAAK,CACf,GAAI,GAAQhB,OAAOQ,UAAnB,CACI,EAAQ,IADZ,CADe,IAIb,GAJa,CAKb,EAAUS,OAAV,CAAkB,WAAM,CACtB,EAAG,GAAH,GACD,CAFD,CALa,CAShB,CATD,CAUD,CA1BS,CA2BRC,eA3BQ,2BA2BS,CACjB,QACD,CA7BS,CAVZ,CA0CA,QACD,C","file":"index.js","sourcesContent":["\nimport ManageDevice from './manage_device';\nimport TrackChange from './track_changes';\nimport SizeChanged from './size_changed';\n\nconst isTouchDevice = ()=>{\n  return 'ontouchstart' in window        // works on most browsers\n      || navigator.maxTouchPoints;       // works on IE10/11 and Surface\n};\n\nexport default (breakpoints)=>{\n  breakpoints = breakpoints || {\n    mobile: {min: 0, max: 767}\n    , tablet: {min: 768, max: 992}\n    , desktop: {min: 993, max: null}\n  };\n\n  let device = ManageDevice(breakpoints);\n  let deviceWidth = window.innerWidth;\n  let callbacks = [];\n  let touch = isTouchDevice();\n  const changeCheck = SizeChanged(\n    breakpoints\n    , device\n    , deviceWidth\n  );\n\n  const obj = {\n    addCallback(cb){\n      if (Object.prototype.toString.call(cb) === '[object Function]'){\n        cb = [cb];\n      }\n      callbacks = callbacks.concat(cb);\n\n      return obj;\n    }\n    , getDevice(){\n      return device();\n    }\n    , getWidth(){\n      return deviceWidth;\n    }\n    , track(){\n      TrackChange((e)=>{\n        let width = window.innerWidth;\n        let check = changeCheck(width);\n        if (check){\n          deviceWidth = width;\n          callbacks.forEach((cb)=>{\n            cb(device(), width);\n          });\n        }\n      });\n    }\n    , touchAvailabile(){\n      return touch;\n    }\n  };\n\n  return obj;\n};\n"]}