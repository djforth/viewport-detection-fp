{"version":3,"file":"index.js","sources":["src/manage_device.js","src/track_changes.js","src/size_changed.js","src/index.js"],"sourcesContent":["const include = (arr, obj)=>(arr.indexOf(obj) != -1);\n\n\nexport default (breakpoints)=>{\n  let device = 'mobile';\n  let expected = Object.keys(breakpoints);\n\n  return (d)=>{\n    console.log('device', d)\n    if (!include(expected, d)) return device;\n    device = d;\n    return device;\n  };\n};\n","\nexport default (tracker)=>{\n  window.addEventListener(\n    'resize', tracker, false\n  );\n\n  window.addEventListener(\n    'orientationchange', tracker, false\n  );\n};\n","\nconst CheckDevice = (breakpoints)=>(width)=>{\n  for (let dev in breakpoints){\n    if (breakpoints[dev]){\n      let {min, max} = breakpoints[dev];\n      if (max === null && width > min) return dev;\n      if (width > min && width < max) return dev;\n    }\n  }\n\n  return null;\n};\n\nexport default (breakpoints, device, width)=>{\n  let currentWidth = width;\n  const checker = CheckDevice(breakpoints);\n  device(checker(currentWidth));\n  return (changeWidth)=>{\n    if (changeWidth === currentWidth) return false;\n    currentWidth = changeWidth;\n    let newDevice = checker(currentWidth);\n    if (newDevice === null) return false;\n    if (device() === newDevice) return false;\n    device(newDevice);\n    return true;\n  };\n};\n","\nimport ManageDevice from './manage_device';\nimport TrackChange from './track_changes';\nimport SizeChanged from './size_changed';\n\nconst isTouchDevice = ()=>{\n  return 'ontouchstart' in window        // works on most browsers\n      || navigator.maxTouchPoints;       // works on IE10/11 and Surface\n};\n\nexport default (breakpoints)=>{\n  breakpoints = breakpoints || {\n    mobile: {min: 0, max: 767}\n    , tablet: {min: 768, max: 992}\n    , desktop: {min: 993, max: null}\n  };\n\n  let device = ManageDevice(breakpoints);\n  let deviceWidth = window.innerWidth;\n  let callbacks = [];\n  let touch = isTouchDevice();\n  const changeCheck = SizeChanged(\n    breakpoints\n    , device\n    , deviceWidth\n  );\n\n  const obj = {\n    addCallback(cb){\n      if (Object.prototype.toString.call(cb) === '[object Function]'){\n        cb = [cb];\n      }\n      callbacks = callbacks.concat(cb);\n\n      return obj;\n    }\n    , getDevice(){\n      return device();\n    }\n    , getWidth(){\n      return deviceWidth;\n    }\n    , track(){\n      TrackChange((e)=>{\n        let width = window.innerWidth;\n        let check = changeCheck(width);\n        if (check){\n          deviceWidth = width;\n          callbacks.forEach((cb)=>{\n            cb(device(), width);\n          });\n        }\n      });\n    }\n    , touchAvailabile(){\n      return touch;\n    }\n  };\n\n  return obj;\n};\n"],"names":["indexOf","Object","keys","console","log","include","window","addEventListener","min","max","CheckDevice","navigator","maxTouchPoints","mobile","tablet","desktop","ManageDevice","innerWidth","isTouchDevice","SizeChanged","addCallback","prototype","toString","call","concat","getDevice","getWidth","track","TrackChange","forEach","touchAvailabile"],"mappings":";;;;;;AAAA,YAAgB,oBAAiC,CAAC,CAArB,IAAIA,OAAJ,GAAb,CAAhB,CAGA,oBAAe,WAAe,CAC5B,MAAa,QAAb,CACI,EAAWC,OAAOC,IAAP,GADf,CAGA,kBAAY,QACVC,QAAQC,GAAR,CAAY,QAAZ,GADU,CAEN,CAACC,YAFK,KAGV,GAHU,GAKX,CACF,CAVD;;ACFA,mBAAe,WAAW,CACxBC,OAAOC,gBAAP,CACE,QADF,MADwB,CAKxBD,OAAOC,gBAAP,CACE,mBADF,OAGD,CARD;;ACAA,gBAAoB,8BAAwB,CAC1C,IAAK,KAAL,MACE,GAAI,IAAJ,CAAqB,OACF,IADE,KACdC,GADc,KACTC,GADS,CAEnB,GAAY,IAAR,MAAgB,GAApB,CAAiC,SACjC,GAAI,KAAe,GAAnB,CAAgC,QACjC,CAGH,WACD,CAVmB,CAApB,CAYA,mBAAe,eAA8B,CAC3C,OAAA,CACM,EAAUC,cADhB,CAGA,SADO,IAAP,CACA,CAAO,WAAe,CACpB,GAAI,KAAJ,CAAkC,SAClC,GAFoB,CAGpB,MAAgB,IAAhB,CAHoB,WAIhB,IAJgB,EAKhB,OALgB,GAMpB,IANoB,IAQrB,CACF,CAbD;;ACRA,kBAAsB,UAAI,CACxB,MAAO,uBAAA,EACAC,UAAUC,cAClB,CAHD,CAKA,aAAe,WAAe,CAC5B,EAAc,GAAe,CAC3BC,OAAQ,CAACL,IAAK,CAAN,CAASC,IAAK,GAAd,CADmB,CAEzBK,OAAQ,CAACN,IAAK,GAAN,CAAWC,IAAK,GAAhB,CAFiB,CAGzBM,QAAS,CAACP,IAAK,GAAN,CAAWC,IAAK,IAAhB,CAHgB,CADD,CAO5B,MAAaO,eAAb,CACI,EAAcV,OAAOW,UADzB,CAEI,IAFJ,CAGI,EAAQC,eAHZ,CAIM,EAAcC,kBAJpB,CAUM,EAAM,CACVC,WADU,wBACK,CAMb,MAL2C,mBAAvC,UAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,GAKJ,GAJE,EAAK,GAIP,EAFA,EAAY,EAAUC,MAAV,GAEZ,EACD,CARS,CASRC,SATQ,qBASG,CACX,UACD,CAXS,CAYRC,QAZQ,oBAYE,CACV,QACD,CAdS,CAeRC,KAfQ,iBAeD,CACPC,YAAY,UAAK,CACf,MAAYtB,OAAOW,UAAnB,CACI,EAAQ,IADZ,CADe,IAIb,GAJa,CAKb,EAAUY,OAAV,CAAkB,WAAM,CACtB,EAAG,GAAH,IACD,CAFD,CALa,EAShB,CATD,EAUD,CA1BS,CA2BRC,eA3BQ,2BA2BS,CACjB,QACD,CA7BS,CAVZ,CA0CA,QACD,CAlDD;;;;;;;;"}